@use '../forward'as *;



dialog {
  pointer-events: none;

  &[open] {
    pointer-events: inherit;
  }
}



.c-dialog {
  border: 1px solid var(--clr-borderMuted);
  color: var(--clr-textOnSurface);
  background-color: var(--clr-surface);

  &__inner {
    min-height: 100%;
    padding: 1.5em 2em;
  }
}



.c-modal {
  @include fixed(0);

  & {
    display: block;
    z-index: var(--zi-overlay);
    opacity: 0;

    width: clamp(300px, 75vw, 600px);

    color: var(--clr-text);
    background-color: var(--clr-background);
    transition: all var(--an-duration) var(--an-ease);
  }

  &::backdrop {
    transition: all var(--an-duration) var(--an-ease);
    backdrop-filter: blur(5px);
  }

  &[open] {
    opacity: 1;
    box-shadow: var(--boxShadow);
  }



  &__inner {
    min-height: 100%;
    padding: 1.5em 2em;
  }
}



.c-offCanvas {
  @include fixed(0 auto 0 0);

  & {
    z-index: var(--zi-overlay);

    display: block;

    margin-block: 0;
    width: max(35ch, goldenratio-b(100vw));
    height: 100%;
    max-height: none;

    color: var(--clr-textOnSurface);
    background-color: var(--clr-surface);

    transition: all var(--an-duration) var(--an-ease);
    transform: translate3d(-100%, 0, 0);
  }

  &[data-type="modal"] {

    &::backdrop {
      backdrop-filter: blur(5px);
      transition: all var(--an-duration) var(--an-ease);
    }

    &[open] {
      transform: translate3d(0, 0, 0);
      box-shadow: 0 0 0 100vw rgba(0, 0, 0, 0.5);
    }
  }



  &[open] {
    transform: translate3d(0, 0, 0);
  }



  &__inner {
    min-height: 100%;
    padding: 1.5em 2em;
  }
}